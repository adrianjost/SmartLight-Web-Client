service cloud.firestore {
	match /databases/{database}/documents {
		// options: get, list, create, update, delete

		function isOwner(){
			return resource != null && request.auth.uid == resource.data.created_by;
		}

		function isAllowedUser(){
			return (resource != null && request.auth.uid in resource.data.allowedUsers)
		}

		function isUid(field){
			return request.auth.uid == request.resource.data[field]
		}

		function unchanged(field){
			return request.resource.data[field] == resource.data[field]
		}

		function validUpdate(){
			return isAllowedUser() && isUid("updated_by") && unchanged("created_by")
		}

		match /states/{id}{
			allow create: if isUid("created_by");
			allow read: if isAllowedUser();
			allow update: if validUpdate();
			allow delete: if isOwner();
		}
		match /units/{id}{
			allow create: if isUid("created_by");
			allow read: if isAllowedUser();
			allow update: if validUpdate();
			allow delete: if isOwner();
			// TODO [#57]: check that groups only contain lamps the user has access to.
		}
		match /users/{userId}{
			allow read, write: if request.auth.uid == userId;
		}
	}
}