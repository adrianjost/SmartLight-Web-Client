{
  "rules": {
    // api is allowed to do anything, cause it handles authorization & permission management itself.
    ".read": "auth.uid === 'assistant-api'",
    ".write": "auth.uid === 'assistant-api'",
    "users": {
      "$userId": {
        ".read": "$userId === auth.uid",
        ".write": "$userId === auth.uid"
      }
    },
    "units": {
      ".read": "auth.uid != null && query.orderByChild == 'creatorId' && query.equalTo == auth.uid", // restrict access to creator
      ".indexOn": "creatorId",
      "$index": {
        ".read": "data.child('creatorId').val() === auth.uid",
        ".write": "!data.exists() || data.child('creatorId').val() === auth.uid",
        ".validate": "newData.child('creatorId').val() === auth.uid",
        "state" : {
          "color": {
            ".validate": "newData.val().matches(/^#[A-Fa-f0-9]{6}$/)"
          }
        }
      }
    },
    "states": {
      ".read": "auth.uid != null && query.orderByChild == 'creatorId' && query.equalTo == auth.uid", // restrict access to creator
      ".indexOn": "creatorId",
      "$index": {
        ".read": "data.child('creatorId').val() === auth.uid",
        ".write": "!data.exists() || data.child('creatorId').val() === auth.uid",
        ".validate": "newData.child('creatorId').val() === auth.uid"
      }
    }
  }
}